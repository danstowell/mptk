#------------------------------------------------
# Set MPTK header
# 
SET(MPTK_HEADER_H FALSE INTERNAL)
FIND_FILE(MPTK_HEADER_H header.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_HEADER_H)
SET(HAVE_MPTK_HEADER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/header.h")
ENDIF(MPTK_HEADER_H)
SET(MPTK_CONFIG_H FALSE INTERNAL)
FIND_FILE(MPTK_CONFIG_H config.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_CONFIG_H)
SET(HAVE_MPTK_CONFIG_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/config.h")
ENDIF(MPTK_CONFIG_H)
SET(MPTK_MP_SYSTEM_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_SYSTEM_H mp_system.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_SYSTEM_H)
SET(HAVE_MPTK_MP_SYSTEM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_system.h")
ENDIF(MPTK_MP_SYSTEM_H)
SET(MPTK_REGRESSION_CONSTANT_H FALSE INTERNAL)
FIND_FILE(MPTK_REGRESSION_CONSTANT_H regression_constants.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_REGRESSION_CONSTANT_H)
SET(HAVE_MPTK_REGRESSION_CONSTANT_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/regression_constants.h")
ENDIF(MPTK_REGRESSION_CONSTANT_H)
SET(MPTK_MP_TYPE_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_TYPE_H mp_types.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_TYPE_H)
SET(HAVE_MPTK_MP_TYPE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_types.h")
ENDIF(MPTK_MP_TYPE_H)
SET(MPTK_MP_MESSAGING_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_MESSAGING_H mp_messaging.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_MESSAGING_H)
SET(HAVE_MPTK_MP_MESSAGING_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_messaging.h")
ENDIF(MPTK_MP_MESSAGING_H)
SET(MPTK_WIN_SERVER_H FALSE INTERNAL)
FIND_FILE(MPTK_WIN_SERVER_H win_server.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_WIN_SERVER_H)
SET(HAVE_MPTK_WIN_SERVER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/win_server.h")
ENDIF(MPTK_WIN_SERVER_H)
SET(MPTK_FFT_INTERFACE_H FALSE INTERNAL)
FIND_FILE(MPTK_FFT_INTERFACE_H fft_interface.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_FFT_INTERFACE_H)
SET(HAVE_MPTK_FFT_INTERFACE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/fft_interface.h")
ENDIF(MPTK_FFT_INTERFACE_H)
SET(MPTK_GENERAL_H FALSE INTERNAL)
FIND_FILE(MPTK_GENERAL_H general.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_GENERAL_H)
SET(HAVE_MPTK_GENERAL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/general.h")
ENDIF(MPTK_GENERAL_H)
SET(MPTK_MTRAND_H FALSE INTERNAL)
FIND_FILE(MPTK_MTRAND_H mtrand.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MTRAND_H)
SET(HAVE_MPTK_MTRAND_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mtrand.h")
ENDIF(MPTK_MTRAND_H)
SET(MPTK_REGRESSION_H FALSE INTERNAL)
FIND_FILE(MPTK_REGRESSION_H regression.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_REGRESSION_H)
SET(HAVE_MPTK_REGRESSION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/regression.h")
ENDIF(MPTK_REGRESSION_H)
SET(MPTK_MP_SIGNAL_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_SIGNAL_H mp_signal.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_SIGNAL_H)
SET(HAVE_MPTK_MP_SIGNAL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_signal.h")
ENDIF(MPTK_MP_SIGNAL_H)
SET(MPTK_TFMAP_H FALSE INTERNAL)
FIND_FILE(MPTK_TFMAP_H tfmap.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_TFMAP_H)
SET(HAVE_MPTK_TFMAP_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/tfmap.h")
ENDIF(MPTK_TFMAP_H)
SET(MPTK_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_ATOM_H atom.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ATOM_H)
SET(HAVE_MPTK_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom.h")
ENDIF(MPTK_ATOM_H)
SET(MPTK_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_BLOCK_H block.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_BLOCK_H)
SET(HAVE_MPTK_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/block.h")
ENDIF(MPTK_BLOCK_H)
SET(MPTK_MASK_H FALSE INTERNAL)
FIND_FILE(MPTK_MASK_H mask.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MASK_H)
SET(HAVE_MPTK_MASK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mask.h")
ENDIF(MPTK_MASK_H)
SET(MPTK_BOOK_H FALSE INTERNAL)
FIND_FILE(MPTK_BOOK_H book.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_BOOK_H)
SET(HAVE_MPTK_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/book.h")
ENDIF(MPTK_BOOK_H)
SET(MPTK_DICT_H FALSE INTERNAL)
FIND_FILE(MPTK_DICT_H dict.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_DICT_H)
SET(HAVE_MPTK_DICT_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/dict.h")
ENDIF(MPTK_DICT_H)
SET(MPTK_ANYWAVE_TABLE_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_TABLE_H anywave_table.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ANYWAVE_TABLE_H)
SET(HAVE_MPTK_ANYWAVE_TABLE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_table.h")
ENDIF(MPTK_ANYWAVE_TABLE_H)
SET(MPTK_ANYWAVE_SERVER_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_SERVER_H anywave_server.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ANYWAVE_SERVER_H)
SET(HAVE_MPTK_ANYWAVE_SERVER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_server.h")
ENDIF(MPTK_ANYWAVE_SERVER_H)
SET(MPTK_CONVOLUTION_H FALSE INTERNAL)
FIND_FILE(MPTK_CONVOLUTION_H convolution.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_CONVOLUTION_H)
SET(HAVE_MPTK_CONVOLUTION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/convolution.h")
ENDIF(MPTK_CONVOLUTION_H)
SET(MPTK_MP_CORE_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_CORE_H mp_core.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_CORE_H)
SET(HAVE_MPTK_MP_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_core.h")
ENDIF(MPTK_MP_CORE_H)
SET(MPTK_MPD_CORE_H FALSE INTERNAL)
FIND_FILE(MPTK_MPD_CORE_H mpd_core.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MPD_CORE_H)
SET(HAVE_MPTK_MPD_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mpd_core.h")
ENDIF(MPTK_MPD_CORE_H)
SET(MPTK_MPD_DEMIX_CORE_H FALSE INTERNAL)
FIND_FILE(MPTK_MPD_DEMIX_CORE_H mpd_demix_core.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MPD_DEMIX_CORE_H)
SET(HAVE_MPTK_MPD_DEMIX_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mpd_demix_core.h")
ENDIF(MPTK_MPD_DEMIX_CORE_H)
SET(MPTK_MP_ENV_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_ENV_H mptk_env.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_ENV_H)
SET(HAVE_MPTK_MP_ENV_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mptk_env.h")
ENDIF(MPTK_MP_ENV_H)
SET(MPTK_MP_MIXER_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_MIXER_H mixer.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_MIXER_H)
SET(HAVE_MPTK_MP_MIXER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mixer.h")
ENDIF(MPTK_MP_MIXER_H)
SET(MPTK_MP_ATOM_FACTORY_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_ATOM_FACTORY_H atom_factory.h ${MPTK_SOURCE_DIR}/src/libmptk/)
IF(MPTK_MP_ATOM_FACTORY_H)
SET(HAVE_MPTK_ATOM_FACTORY_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_factory.h")
ENDIF(MPTK_MP_ATOM_FACTORY_H)
SET(MPTK_MP_BLOCK_FACTORY_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_BLOCK_FACTORY_H block_factory.h ${MPTK_SOURCE_DIR}/src/libmptk/)
IF(MPTK_MP_BLOCK_FACTORY_H)
SET(HAVE_MPTK_BLOCK_FACTORY_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/block_factory.h")
ENDIF(MPTK_MP_BLOCK_FACTORY_H)
SET(MPTK_MP_DLL_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_DLL_H dll.h ${MPTK_SOURCE_DIR}/src/libmptk/)
IF(MPTK_MP_DLL_H)
SET(HAVE_MPTK_MP_DLL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_dll.h")
ENDIF(MPTK_MP_DLL_H)
SET(MPTK_MP_PTHREADS_BARRIER_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_PTHREADS_BARRIER_H  mp_pthreads_barrier.h ${MPTK_SOURCE_DIR}/src/libmptk/)
IF(MPTK_MP_PTHREADS_BARRIER_H)
SET(HAVE_MPTK_MP_PTHREADS_BARRIER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_pthreads_barrier.h")
ENDIF(MPTK_MP_PTHREADS_BARRIER_H) 
SET(MPTK_MP_HASH_CONTAINER_HEADER_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_HASH_CONTAINER_HEADER_H  mp_hash_container_header.h ${MPTK_SOURCE_DIR}/src/libmptk/)
IF(MPTK_MP_HASH_CONTAINER_HEADER_H)
SET(HAVE_MPTK_MP_HASH_CONTAINER_HEADER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_hash_container_header.h")
ENDIF(MPTK_MP_HASH_CONTAINER_HEADER_H) 


 




