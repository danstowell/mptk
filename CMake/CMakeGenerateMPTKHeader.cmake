#------------------------------------------------
# Set MPTK header
# 
FIND_FILE(MPTK_HEADER_H header.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_HEADER_H)
SET(HAVE_MPTK_HEADER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/header.h")
ENDIF(MPTK_HEADER_H)

FIND_FILE(MPTK_CONFIG_H config.h ${MPTK_BINARY_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_CONFIG_H)
SET(HAVE_MPTK_CONFIG_H 1 CACHE INTERNAL "Have include ${MPTK_BINARY_DIR}/src/libmptk/config.h")
ENDIF(MPTK_CONFIG_H)

FIND_FILE(MPTK_MP_SYSTEM_H mp_system.h ${MPTK_SOURCE_DIR} NO_DEFAULT_PATH)
IF(MPTK_MP_SYSTEM_H)
SET(HAVE_MPTK_MP_SYSTEM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/mp_system.h")
ENDIF(MPTK_MP_SYSTEM_H)

# We search for the make_regression_constants.cpp file because it generates the regression_constants.h file
FIND_FILE(MPTK_REGRESSION_CONSTANT_H make_regression_constants.cpp ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_REGRESSION_CONSTANT_H)
SET(HAVE_MPTK_REGRESSION_CONSTANT_H 1 CACHE INTERNAL "Have include ${MPTK_BINARY_DIR}/src/libmptk/regression_constants.h")
ENDIF(MPTK_REGRESSION_CONSTANT_H)

FIND_FILE(MPTK_MP_TYPE_H mp_types.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MP_TYPE_H)
SET(HAVE_MPTK_MP_TYPE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_types.h")
ENDIF(MPTK_MP_TYPE_H)

FIND_FILE(MPTK_MP_MESSAGING_H mp_messaging.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MP_MESSAGING_H)
SET(HAVE_MPTK_MP_MESSAGING_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_messaging.h")
ENDIF(MPTK_MP_MESSAGING_H)

FIND_FILE(MPTK_WIN_SERVER_H win_server.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_WIN_SERVER_H)
SET(HAVE_MPTK_WIN_SERVER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/win_server.h")
ENDIF(MPTK_WIN_SERVER_H)

FIND_FILE(MPTK_FFT_INTERFACE_H fft_interface.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_FFT_INTERFACE_H)
SET(HAVE_MPTK_FFT_INTERFACE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/fft_interface.h")
ENDIF(MPTK_FFT_INTERFACE_H)

FIND_FILE(MPTK_DCT_INTERFACE_H dct_interface.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_DCT_INTERFACE_H)
SET(HAVE_MPTK_DCT_INTERFACE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/dct_interface.h")
ENDIF(MPTK_DCT_INTERFACE_H)

SET(MPTK_GENERAL_H FALSE INTERNAL)
FIND_FILE(MPTK_GENERAL_H general.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_GENERAL_H)
SET(HAVE_MPTK_GENERAL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/general.h")
ENDIF(MPTK_GENERAL_H)

FIND_FILE(MPTK_MTRAND_H mtrand.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MTRAND_H)
SET(HAVE_MPTK_MTRAND_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mtrand.h")
ENDIF(MPTK_MTRAND_H)

FIND_FILE(MPTK_REGRESSION_H regression.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_REGRESSION_H)
SET(HAVE_MPTK_REGRESSION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/regression.h")
ENDIF(MPTK_REGRESSION_H)

FIND_FILE(MPTK_MP_SIGNAL_H mp_signal.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MP_SIGNAL_H)
SET(HAVE_MPTK_MP_SIGNAL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_signal.h")
ENDIF(MPTK_MP_SIGNAL_H)

FIND_FILE(MPTK_TFMAP_H tfmap.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_TFMAP_H)
SET(HAVE_MPTK_TFMAP_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/tfmap.h")
ENDIF(MPTK_TFMAP_H)

FIND_FILE(MPTK_ATOM_H atom.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_ATOM_H)
SET(HAVE_MPTK_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom.h")
ENDIF(MPTK_ATOM_H)

FIND_FILE(MPTK_BLOCK_H block.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_BLOCK_H)
SET(HAVE_MPTK_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/block.h")
ENDIF(MPTK_BLOCK_H)

FIND_FILE(MPTK_MASK_H mask.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MASK_H)
SET(HAVE_MPTK_MASK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mask.h")
ENDIF(MPTK_MASK_H)

FIND_FILE(MPTK_BOOK_H book.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_BOOK_H)
SET(HAVE_MPTK_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/book.h")
ENDIF(MPTK_BOOK_H)

FIND_FILE(MPTK_MP_POSITION_H  position.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_MP_POSITION_H)
SET(HAVE_MPTK_POSITION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/position.h")
ENDIF(MPTK_MP_POSITION_H)

FIND_FILE(MPTK_MP_ATOM_PARAM_H  atom_param.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_MP_ATOM_PARAM_H)
SET(HAVE_MPTK_ATOM_PARAM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_param.h")
ENDIF(MPTK_MP_ATOM_PARAM_H)

FIND_FILE(MPTK_FREQ_ATOM_PARAM_H  freq_atom_param.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_FREQ_ATOM_PARAM_H)
SET(HAVE_MPTK_FREQ_ATOM_PARAM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/freq_atom_param.h")
ENDIF(MPTK_FREQ_ATOM_PARAM_H)

FIND_FILE(MPTK_GP_ATOM_H  gp_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_GP_ATOM_H)
SET(HAVE_MPTK_GP_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gp_atom.h")
ENDIF(MPTK_GP_ATOM_H)

FIND_FILE(MPTK_GP_BOOK_H  gp_book.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_GP_BOOK_H)
SET(HAVE_MPTK_GP_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gp_book.h")
ENDIF(MPTK_GP_BOOK_H)

FIND_FILE(MPTK_DICT_H dict.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_DICT_H)
SET(HAVE_MPTK_DICT_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/dict.h")
ENDIF(MPTK_DICT_H)

FIND_FILE(MPTK_ANYWAVE_TABLE_H anywave_table.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_ANYWAVE_TABLE_H)
SET(HAVE_MPTK_ANYWAVE_TABLE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_table.h")
ENDIF(MPTK_ANYWAVE_TABLE_H)

FIND_FILE(MPTK_ANYWAVE_SERVER_H anywave_server.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_ANYWAVE_SERVER_H)
SET(HAVE_MPTK_ANYWAVE_SERVER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_server.h")
ENDIF(MPTK_ANYWAVE_SERVER_H)

FIND_FILE(MPTK_CONVOLUTION_H convolution.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_CONVOLUTION_H)
SET(HAVE_MPTK_CONVOLUTION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/convolution.h")
ENDIF(MPTK_CONVOLUTION_H)

FIND_FILE(MPTK_MP_CORE_H mp_core.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MP_CORE_H)
SET(HAVE_MPTK_MP_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_core.h")
ENDIF(MPTK_MP_CORE_H)

FIND_FILE(MPTK_MPD_CORE_H mpd_core.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MPD_CORE_H)
SET(HAVE_MPTK_MPD_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mpd_core.h")
ENDIF(MPTK_MPD_CORE_H)

FIND_FILE(MPTK_MPD_DEMIX_CORE_H mpd_demix_core.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MPD_DEMIX_CORE_H)
SET(HAVE_MPTK_MPD_DEMIX_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mpd_demix_core.h")
ENDIF(MPTK_MPD_DEMIX_CORE_H)

FIND_FILE(MPTK_MP_ENV_H mptk_env.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MP_ENV_H)
SET(HAVE_MPTK_MP_ENV_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mptk_env.h")
ENDIF(MPTK_MP_ENV_H)

FIND_FILE(MPTK_MP_MIXER_H mixer.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_MP_MIXER_H)
SET(HAVE_MPTK_MP_MIXER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mixer.h")
ENDIF(MPTK_MP_MIXER_H)

FIND_FILE(MPTK_MP_ATOM_FACTORY_H atom_factory.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_MP_ATOM_FACTORY_H)
SET(HAVE_MPTK_ATOM_FACTORY_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_factory.h")
ENDIF(MPTK_MP_ATOM_FACTORY_H)

FIND_FILE(MPTK_MP_BLOCK_FACTORY_H block_factory.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_MP_BLOCK_FACTORY_H)
SET(HAVE_MPTK_BLOCK_FACTORY_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/block_factory.h")
ENDIF(MPTK_MP_BLOCK_FACTORY_H)

FIND_FILE(MPTK_MP_DLL_H dll.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_MP_DLL_H)
SET(HAVE_MPTK_MP_DLL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_dll.h")
ENDIF(MPTK_MP_DLL_H)

FIND_FILE(MPTK_MP_PTHREADS_BARRIER_H  mp_pthreads_barrier.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_MP_PTHREADS_BARRIER_H)
SET(HAVE_MPTK_MP_PTHREADS_BARRIER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_pthreads_barrier.h")
ENDIF(MPTK_MP_PTHREADS_BARRIER_H) 

FIND_FILE(MPTK_GP_PARAM_BOOK_H  gp_param_book.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_GP_PARAM_BOOK_H)
SET(HAVE_MPTK_GP_PARAM_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gp_param_book.h")
ENDIF(MPTK_GP_PARAM_BOOK_H)

FIND_FILE(MPTK_GP_POS_BOOK_H  gp_pos_book.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_GP_POS_BOOK_H)
SET(HAVE_MPTK_GP_POS_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gp_pos_book.h")
ENDIF(MPTK_GP_POS_BOOK_H)

FIND_FILE(MPTK_GP_BLOCK_BOOK_H  gp_block_book.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_GP_BLOCK_BOOK_H)
SET(HAVE_MPTK_GP_BLOCK_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gp_block_book.h")
ENDIF(MPTK_GP_BLOCK_BOOK_H)

FIND_FILE(MPTK_GP_POS_RANGE_SUB_BOOK_H  gp_pos_range_sub_book.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_GP_POS_RANGE_SUB_BOOK_H)
SET(HAVE_MPTK_GP_POS_RANGE_SUB_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gp_pos_range_sub_book.h")
ENDIF(MPTK_GP_POS_RANGE_SUB_BOOK_H)

FIND_FILE(MPTK_DOUBLE_INDEX_BOOK_H  double_index_book.h ${MPTK_SOURCE_DIR}/src/libmptk/ NO_DEFAULT_PATH)
IF(MPTK_DOUBLE_INDEX_BOOK_H)
SET(HAVE_MPTK_DOUBLE_INDEX_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/double_index_book.h")
ENDIF(MPTK_DOUBLE_INDEX_BOOK_H)

FIND_FILE(MPTK_GPD_CORE_H gpd_core.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_GPD_CORE_H)
SET(HAVE_MPTK_GPD_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/gpd_core.h")
ENDIF(MPTK_GPD_CORE_H)

FIND_FILE(MPTK_CMPD_CORE_H cmpd_core.h ${MPTK_SOURCE_DIR}/src/libmptk NO_DEFAULT_PATH)
IF(MPTK_CMPD_CORE_H)
SET(HAVE_MPTK_CMPD_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/cmpd_core.h")
ENDIF(MPTK_CMPD_CORE_H)
