SET(MPTK_HEADER_H FALSE INTERNAL)
FIND_FILE(MPTK_HEADER_H header.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_HEADER_H)
SET(HAVE_MPTK_HEADER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/header.h")
ENDIF(MPTK_HEADER_H)
SET(MPTK_CONFIG_H FALSE INTERNAL)
FIND_FILE(MPTK_CONFIG_H config.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_CONFIG_H)
SET(HAVE_MPTK_CONFIG_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/config.h")
ENDIF(MPTK_CONFIG_H)
SET(MPTK_MP_SYSTEM_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_SYSTEM_H mp_system.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_SYSTEM_H)
SET(HAVE_MPTK_MP_SYSTEM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_system.h")
ENDIF(MPTK_MP_SYSTEM_H)
SET(MPTK_REGRESSION_CONSTANT_H FALSE INTERNAL)
FIND_FILE(MPTK_REGRESSION_CONSTANT_H regression_constants.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_REGRESSION_CONSTANT_H)
SET(HAVE_MPTK_REGRESSION_CONSTANT_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/regression_constants.h")
ENDIF(MPTK_REGRESSION_CONSTANT_H)
SET(MPTK_MP_TYPE_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_TYPE_H mp_types.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_TYPE_H)
SET(HAVE_MPTK_MP_TYPE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_types.h")
ENDIF(MPTK_MP_TYPE_H)
SET(MPTK_MP_MESSAGING_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_MESSAGING_H mp_messaging.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_MESSAGING_H)
SET(HAVE_MPTK_MP_MESSAGING_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_messaging.h")
ENDIF(MPTK_MP_MESSAGING_H)
SET(MPTK_WIN_SERVER_H FALSE INTERNAL)
FIND_FILE(MPTK_WIN_SERVER_H win_server.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_WIN_SERVER_H)
SET(HAVE_MPTK_WIN_SERVER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/win_server.h")
ENDIF(MPTK_WIN_SERVER_H)
SET(MPTK_FFT_INTERFACE_H FALSE INTERNAL)
FIND_FILE(MPTK_FFT_INTERFACE_H fft_interface.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_FFT_INTERFACE_H)
SET(HAVE_MPTK_FFT_INTERFACE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/fft_interface.h")
ENDIF(MPTK_FFT_INTERFACE_H)
SET(MPTK_GENERAL_H FALSE INTERNAL)
FIND_FILE(MPTK_GENERAL_H general.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_GENERAL_H)
SET(HAVE_MPTK_GENERAL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/general.h")
ENDIF(MPTK_GENERAL_H)
SET(MPTK_MTRAND_H FALSE INTERNAL)
FIND_FILE(MPTK_MTRAND_H mtrand.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MTRAND_H)
SET(HAVE_MPTK_MTRAND_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mtrand.h")
ENDIF(MPTK_MTRAND_H)
SET(MPTK_REGRESSION_H FALSE INTERNAL)
FIND_FILE(MPTK_REGRESSION_H regression.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_REGRESSION_H)
SET(HAVE_MPTK_REGRESSION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/regression.h")
ENDIF(MPTK_REGRESSION_H)
SET(MPTK_MP_SIGNAL_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_SIGNAL_H mp_signal.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_SIGNAL_H)
SET(HAVE_MPTK_MP_SIGNAL_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mp_signal.h")
ENDIF(MPTK_MP_SIGNAL_H)
SET(MPTK_TFMAP_H FALSE INTERNAL)
FIND_FILE(MPTK_TFMAP_H tfmap.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_TFMAP_H)
SET(HAVE_MPTK_TFMAP_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/tfmap.h")
ENDIF(MPTK_TFMAP_H)
SET(MPTK_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_ATOM_H atom.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ATOM_H)
SET(HAVE_MPTK_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom.h")
ENDIF(MPTK_ATOM_H)
SET(MPTK_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_BLOCK_H block.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_BLOCK_H)
SET(HAVE_MPTK_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/block.h")
ENDIF(MPTK_BLOCK_H)
SET(MPTK_MASK_H FALSE INTERNAL)
FIND_FILE(MPTK_MASK_H mask.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MASK_H)
SET(HAVE_MPTK_MASK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mask.h")
ENDIF(MPTK_MASK_H)
SET(MPTK_BOOK_H FALSE INTERNAL)
FIND_FILE(MPTK_BOOK_H book.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_BOOK_H)
SET(HAVE_MPTK_BOOK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/book.h")
ENDIF(MPTK_BOOK_H)
SET(MPTK_DICT_H FALSE INTERNAL)
FIND_FILE(MPTK_DICT_H dict.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_DICT_H)
SET(HAVE_MPTK_DICT_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/dict.h")
ENDIF(MPTK_DICT_H)
SET(MPTK_ANYWAVE_TABLE_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_TABLE_H anywave_table.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ANYWAVE_TABLE_H)
SET(HAVE_MPTK_ANYWAVE_TABLE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_table.h")
ENDIF(MPTK_ANYWAVE_TABLE_H)
SET(MPTK_ANYWAVE_SERVER_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_SERVER_H anywave_server.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ANYWAVE_SERVER_H)
SET(HAVE_MPTK_ANYWAVE_SERVER_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_server.h")
ENDIF(MPTK_ANYWAVE_SERVER_H)
SET(MPTK_ANYWAVE_TABLE_IO_INTERFACE_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_TABLE_IO_INTERFACE_H anywave_table_io_interface.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_ANYWAVE_TABLE_IO_INTERFACE_H)
SET(HAVE_MPTK_ANYWAVE_TABLE_IO_INTERFACE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/anywave_table_io_interface.h")
ENDIF(MPTK_ANYWAVE_TABLE_IO_INTERFACE_H)
SET(MPTK_CONVOLUTION_H FALSE INTERNAL)
FIND_FILE(MPTK_CONVOLUTION_H convolution.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_CONVOLUTION_H)
SET(HAVE_MPTK_CONVOLUTION_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/convolution.h")
ENDIF(MPTK_CONVOLUTION_H)
SET(MPTK_DIRAC_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_DIRAC_ATOM_H dirac_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_DIRAC_ATOM_H)
SET(HAVE_MPTK_DIRAC_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/dirac_atom.h")
ENDIF(MPTK_DIRAC_ATOM_H)
SET(MPTK_DIRAC_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_DIRAC_BLOCK_H dirac_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_DIRAC_BLOCK_H)
SET(HAVE_MPTK_DIRAC_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/dirac_block.h")
ENDIF(MPTK_DIRAC_BLOCK_H)
SET(MPTK_GABOR_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_GABOR_ATOM_H gabor_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_GABOR_ATOM_H)
SET(HAVE_MPTK_GABOR_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/gabor_atom.h")
ENDIF(MPTK_GABOR_ATOM_H)
SET(MPTK_GABOR_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_GABOR_BLOCK_H gabor_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_GABOR_BLOCK_H)
SET(HAVE_MPTK_GABOR_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/gabor_block.h")
ENDIF(MPTK_GABOR_BLOCK_H)
SET(MPTK_HARMONIC_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_HARMONIC_ATOM_H harmonic_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_HARMONIC_ATOM_H)
SET(HAVE_MPTK_HARMONIC_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/harmonic_atom.h")
ENDIF(MPTK_HARMONIC_ATOM_H)
SET(MPTK_HARMONIC_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_HARMONIC_BLOCK_H harmonic_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_HARMONIC_BLOCK_H)
SET(HAVE_MPTK_HARMONIC_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/harmonic_block.h")
ENDIF(MPTK_HARMONIC_BLOCK_H)
SET(MPTK_CHIRP_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_CHIRP_BLOCK_H chirp_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_CHIRP_BLOCK_H)
SET(HAVE_MPTK_CHIRP_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/chirp_block.h")
ENDIF(MPTK_CHIRP_BLOCK_H)
SET(MPTK_ANYWAVE_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_ATOM_H anywave_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_ANYWAVE_ATOM_H)
SET(HAVE_MPTK_ANYWAVE_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/anywave_atom.h")
ENDIF(MPTK_ANYWAVE_ATOM_H)
SET(MPTK_ANYWAVE_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_BLOCK_H anywave_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_ANYWAVE_BLOCK_H)
SET(HAVE_MPTK_ANYWAVE_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/anywave_block.h")
ENDIF(MPTK_ANYWAVE_BLOCK_H)
SET(MPTK_ANYWAVE_HILBERT_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_HILBERT_ATOM_H anywave_hilbert_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_ANYWAVE_HILBERT_ATOM_H)
SET(HAVE_MPTK_ANYWAVE_HILBERT_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/anywave_hilbert_atom.h")
ENDIF(MPTK_ANYWAVE_HILBERT_ATOM_H)
SET(MPTK_ANYWAVE_HILBERT_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_ANYWAVE_HILBERT_BLOCK_H anywave_hilbert_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_ANYWAVE_HILBERT_BLOCK_H)
SET(HAVE_MPTK_ANYWAVE_HILBERT_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/anywave_hilbert_block.h")
ENDIF(MPTK_ANYWAVE_HILBERT_BLOCK_H)
SET(MPTK_CONSTANT_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_CONSTANT_ATOM_H constant_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_CONSTANT_ATOM_H)
SET(HAVE_MPTK_CONSTANT_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/constant_atom.h")
ENDIF(MPTK_CONSTANT_ATOM_H)
SET(MPTK_CONSTANT_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_CONSTANT_BLOCK_H constant_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_CONSTANT_BLOCK_H)
SET(HAVE_MPTK_CONSTANT_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/constant_block.h")
ENDIF(MPTK_CONSTANT_BLOCK_H)
SET(MPTK_NYQUIST_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_NYQUIST_ATOM_H nyquist_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_NYQUIST_ATOM_H)
SET(HAVE_MPTK_NYQUIST_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/nyquist_atom.h")
ENDIF(MPTK_NYQUIST_ATOM_H)
SET(MPTK_NYQUIST_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_NYQUIST_BLOCK_H nyquist_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base)
IF(MPTK_NYQUIST_BLOCK_H)
SET(HAVE_MPTK_NYQUIST_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/base/nyquist_block.h")
ENDIF(MPTK_NYQUIST_BLOCK_H)
SET(MPTK_BLOCK_IO_INTERFACE_H FALSE INTERNAL)
FIND_FILE(MPTK_BLOCK_IO_INTERFACE_H block_io_interface.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes)
IF(MPTK_BLOCK_IO_INTERFACE_H)
SET(HAVE_MPTK_BLOCK_IO_INTERFACE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/block_io_interface.h")
ENDIF(MPTK_BLOCK_IO_INTERFACE_H)
SET(MPTK_MCLT_ABSTRACT_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_MCLT_ABSTRACT_BLOCK_H mclt_abstract_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MCLT_ABSTRACT_BLOCK_H)
SET(HAVE_MPTK_MCLT_ABSTRACT_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mclt_abstract_block.h")
ENDIF(MPTK_MCLT_ABSTRACT_BLOCK_H)
SET(MPTK_MCDT_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_MCDT_BLOCK_H mdct_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MCDT_BLOCK_H)
SET(HAVE_MPTK_MCDT_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mdct_block.h")
ENDIF(MPTK_MCDT_BLOCK_H)
SET(MPTK_MCDT_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_MCDT_ATOM_H mdct_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MCDT_ATOM_H)
SET(HAVE_MPTK_MCDT_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mdct_atom.h")
ENDIF(MPTK_MCDT_ATOM_H)
SET(MPTK_MCLT_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_MCLT_BLOCK_H mclt_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MCLT_BLOCK_H)
SET(HAVE_MPTK_MCLT_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mclt_block.h")
ENDIF(MPTK_MCLT_BLOCK_H)
SET(MPTK_MCLT_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_MCLT_ATOM_H mclt_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MCLT_ATOM_H)
SET(HAVE_MPTK_MCLT_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mclt_atom.h")
ENDIF(MPTK_MCLT_ATOM_H)
SET(MPTK_MDST_BLOCK_H FALSE INTERNAL)
FIND_FILE(MPTK_MDST_BLOCK_H mdst_block.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MDST_BLOCK_H)
SET(HAVE_MPTK_MDST_BLOCK_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mdst_block.h")
ENDIF(MPTK_MDST_BLOCK_H)
SET(MPTK_MDST_ATOM_H FALSE INTERNAL)
FIND_FILE(MPTK_MDST_ATOM_H mdst_atom.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam)
IF(MPTK_MDST_ATOM_H)
SET(HAVE_MPTK_MDST_ATOM_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/contrib/lam/mdst_atom.h")
ENDIF(MPTK_MDST_ATOM_H)
SET(MPTK_ATOM_CLASSES_H FALSE INTERNAL)
FIND_FILE(MPTK_ATOM_CLASSES_H atom_classes.h ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes)
IF(MPTK_ATOM_CLASSES_H)
SET(HAVE_MPTK_ATOM_CLASSES_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/atom_classes/atom_classes.h")
ENDIF(MPTK_ATOM_CLASSES_H)
SET(MPTK_MPD_CORE_H FALSE INTERNAL)
FIND_FILE(MPTK_MPD_CORE_H mpd_core.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MPD_CORE_H)
SET(HAVE_MPTK_MPD_CORE_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mpd_core.h")
ENDIF(MPTK_MPD_CORE_H)
SET(MPTK_MP_ENV_H FALSE INTERNAL)
FIND_FILE(MPTK_MP_ENV_H mptk_env.h ${MPTK_SOURCE_DIR}/src/libmptk)
IF(MPTK_MP_ENV_H)
SET(HAVE_MPTK_MP_ENV_H 1 CACHE INTERNAL "Have include ${MPTK_SOURCE_DIR}/src/libmptk/mptk_env.h")
ENDIF(MPTK_MP_ENV_H)










 




