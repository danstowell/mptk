TODO:

* URGENT:
  - Do signal.add_spectro_to_tfmap( tfmap ) for Nico.
  - Complete the error message handling mechanism, interface it with the GUI.
  - Extract the core functionalities of mpd/mpf/mpr etc. so that they can be
    called from the GUI, leave only the command-line interfacing in the utils.

* PRE-RELEASE:
  - Dict/block/book/atom I/O:
      + do more error checks on writes
      + decide upon a strategy for the book parsing in binary and text
  - Reinforce the detection/warning of wrong syntaxes in XML dictionaries.
  - mpf : select a given channel ?

				 -----------------
* BUGS:
  - make_regression_constants is not built correctly under Cygwin.

				 -----------------

* IMPROVEMENTS TO THE CORE LIBRARY

  FUNCTIONALITIES

  - enable mpd_demix to use one dictionary for each source
  - enable mpd_demix with a matrix of filters 
  - allow atom selection with weights/penalties (applications include auditory masking)
  - implement anywave_atoms and anywave_blocks with Hilbert transform
  - restructure atom / book classes to introduce molecules MP_Molecule_c -> MP_Atom_c -> MP_Gabor_c ...
							   MP_Molecule_c -> MP_Book_c
							   book->append(MP_Molecule_c)
  - implement orthonormal matching pursuit
  - dict::iterate_mp à scinder en update_all update_ip update_max
  - factor some code in MP_Atom_C::add_to_tfmap() ?
  - complete mpview.m by dealing with several channels
  - replace MP_Sample_t with MP_Real_t and remove the unnecessary castings
  - (BOOKS only:) replace file constructors by factory functions to improve
    the robustness to corrupted input files. (Done for dictionaries.)

  PORTABILITY AND ROBUSTNESS
  - fix integer types : unsigned long int -> uint32 etc
  - fix char/int in array arguments
  - reinforce the test suite
  - check the divergence between signal.compute_energy() and signal.energy

  EASE OF DEVELOPMENT
  - document 'how to add a block' including how to interface with dict_scanner
  - move the header from atom_classes/atom_classes.h (read_atom,write_atom)
    to atom.h, and make it a factory method. 
  - introduce a true plugin structure to load new atom classes (as DLLs ?) without a recompile.

  SPEED
  - Go multi-thread, pthreads style, in dict.update_ip() .
  - OPTIONAL: tabulate the cosines in a "cosines server" ?
    Note:
       cos( omega*t + phi ) = cos( omega*t )cos( phi ) - sin( omega*t )sin( phi )
    => compute cos(phi)/sin(phi) once, get some tabulated cos(omega*t)/sin(omega*t).
  - accelerate first step of MP by computing IP only on good frames

 MISC/OPTIONAL:
  - options in autoconf/automake to build a shared lib ?
  - turn MP_Support_t into a class to get constructors (especially a clean copy
    constructor) and nicer toFrame/fromFrame stuff ? Or make a merge_support
    function to get a mono-channel support which merges the supports across the
    channels ?
  - make a mpmix util to mix sound sources directly in C++ ?

* MID TERM:
  - allow for chirp detection in harmonic blocks
  - Make a parsable/storable format for mpf sorting rules, that could be
    compiled into binary masks for book masking; cleanup the atom-sorting
    mechanism (atom.satisfies etc.).


* LONG TERM:
  - create a MP_Mixer_c class
  - new atom classes: chirps, wavelets, arbitrary waveform templates,
    LPC-style spectral envelopes for unvoiced sounds
  - finalize the tfmap concept/functions/utilities (mpview) + related
    Matlab and/or Lastwave interface




				 -----------------

* IMPROVEMENTS TO THE INTERFACES

  TFMAPs
  - implement pseudo wigner_ville for non Gaussian windows
  - store max and sum by line / by column (to possibly normalize the display and to display marginal tf cuts)
  - add bark/mel scales for frequencies ?

  FILE I/O
  - mpd/mpr/mpf/mpcat/mpd_demix: leave choice between binary or text when
    reading or writing from/to a pipe?
  - get rid of libsndfile to read wav files or add 'gain' option when reading/writing sound files

  GUI
  - display the scale of the time/frequency/amplitude axes
  - add a tool to build new dictionaries
  - implement a pile of zoom event to 'undo' a zooming
  - provide a tool for reconstruction with options 
  - add a panpot view (for BSS type purposes)
  - provide an interface for mpf and mpd_demix
  - go multi-document (1 document = 1 mpd_core ?)
  - selection, cut and paste of atoms from one document to another.





 
