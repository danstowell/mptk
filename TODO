TODO:

* URGENT:
  - Do signal.add_spectro_to_tfmap( tfmap ) for Nico.
  - Complete the error message handling mechanism, interface it with the GUI.
  - Extract the core functionalities of mpd/mpf/mpr etc. so that they can be
    called from the GUI, leave only the command-line interfacing in the utils.

* PRE-RELEASE:
  - include the amplitudes in the MP_Atom_c class and remove MP_Dirac_c
  - Dict/block/book/atom I/O:
      + do more error checks on writes
      + decide upon a strategy for the book parsing in binary and text
  - Reinforce the detection/warning of wrong syntaxes in XML dictionaries.
  - mpf : select a given channel ?

* BUGS:
  - make_regression_constants is not built correctly under Cygwin.
  - Harmonic atoms: re-check behaviour of update_frame and create_atom
    when partials of harmonic atoms go over the Nyquist frequency
    (for certain numPartials/f0Min/f0Max configurations).

* GENERAL IMPROVEMENTS:
  - implement tfmaps for harmonic atoms
  - implement pseudo wigner_ville for non Gaussian windows
  - factor some code in MP_Atom_C::add_to_tfmap() ?
  - move the header from atom_classes/atom_classes.h (read_atom,write_atom)
    to atom.h, and make it a factory method. 
  - document 'how to add a block' including how to interface with dict_scanner
  - complete mpview.m by dealing with several channels
  - get rid of libsndfile to read wav files or add 'gain' option when reading/writing sound files
  - define levels for #ifndef NDEBUG to allow for a finer tuning of the
    quantity of debugging text output; verify if some is more relevant to some
    VERBOSE.
  - replace MP_Sample_t with MP_Real_t and remove the unnecessary castings
  - (BOOKS only:) replace file constructors by factory functions to improve
    the robustness to corrupted input files. (Done for dictionaries.)
  - mpd/mpr/mpf/mpcat/mpd_demix: leave choice between binary or text when
    reading or writing from/to a pipe?
  - check the divergence between signal.compute_energy() and signal.energy
  - reinforce the test suite


* SPEED:
  - Go multi-thread, pthreads style, in dict.update_ip() .
  - OPTIONAL: tabulate the cosines in a "cosines server" ?
    Note:
       cos( omega*t + phi ) = cos( omega*t )cos( phi ) - sin( omega*t )sin( phi )
    => compute cos(phi)/sin(phi) once, get some tabulated cos(omega*t)/sin(omega*t).


* OPTIONAL:
  - options in autoconf/automake to build a shared lib ?
  - turn MP_Support_t into a class to get constructors (especially a clean copy
    constructor) and nicer toFrame/fromFrame stuff ? Or make a merge_support
    function to get a mono-channel support which merges the supports across the
    channels ?
  - make a mpmix util to mix sound sources directly in C++ ?


* MID TERM:
  - allow for chirp detection in harmonic blocks
  - Make a parsable/storable format for mpf sorting rules, that could be
    compiled into binary masks for book masking; cleanup the atom-sorting
    mechanism (atom.satisfies etc.).


* LONG TERM:
  - create a MP_Mixer_c class
  - new atom classes: chirps, wavelets, arbitrary waveform templates,
    LPC-style spectral envelopes for unvoiced sounds
  - finalize the tfmap concept/functions/utilities (mpview) + related
    Matlab and/or Lastwave interface
