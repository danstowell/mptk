#!/bin/bash
 
#PIPOL ubuntu-hardy 1:00 
#PIPOL ubuntu-intrepid 1:00 
#PIPOL ubuntu-jaunty 1:00 
#PIPOL ubuntu-karmic 1:00 
#PIPOL ubuntu-lucid 1:00 
#PIPOL debian-lenny 1:00 
#PIPOL fedora 3:00 
#PIPOL windows 3:00 --root
#PIPOL mac 3:00

# La plate forme ubuntu-feisty est trop ancienne pour les bibliothèques libsndfile et libfftw
# La plate forme debian-etch est trop ancienne pour les bibliothèques libsndfile et libfftw
# La plate forme debian-testing ne dispose pas encore des bibliothèques libsndfile et libfftw

# 1) You have to get your sources from somewhere.
cd $PIPOL_WDIR
svn checkout svn+ssh://rleboulc@scm.gforge.inria.fr/svn/mptk/trunk MPTK_Source
		
case $PIPOL_IMAGE in
	*mac* | *linux*)
	
		# 2) Creation of the Build directory 
		if [ -d "MPTK_Build" ]; then
		  echo "Le dossier MPTK_Build existe déjà..."
		else
		  echo "Le fichier MPTK_Build n'existe pas."
		  echo "Creation..."
		  mkdir MPTK_Build 
		  echo "Fin de la création..."
		fi

		# 3) Configuration of the compilator for Matlab 32/64 bits version
		if expr $PIPOL_IMAGE : ".*i386.*"; then 
			export MACI64=0
			ADDCOMPIL="" 
		else 
			export MACI64=1 
			ADDCOMPIL=-DCMAKE_OSX_ARCHITECTURES=x86_64
		fi
		
		# 4) the build 
		cd MPTK_Build; { 
		    ## 4.1) configuration
		    cmake -DDASH_TESTING=ON -DBUILD_COVERAGE=ON $ADDCOMPIL $PIPOL_WDIR/MPTK_Source
		    make NightlyUpdate
		    make NightlyConfigure
		    ## 4.2) build
		    make NightlyBuild
		    ## 4.3) install
		    sudo make install
			if expr $PIPOL_IMAGE : ".*linux.*"; then 
		    	sudo ldconfig /usr/local/lib
			fi
		    ## 4.4) test
		    make NightlyTest
		    ## 4.5) coverage
		    make NightlyCoverage
		    ## 4.6) Mem check
	   		make NightlyMemCheck
		    ## 4.7) Submit
		    make NightlySubmit
		    ## 4.8) packaging
		    cpack -DCPACK_OUTPUT_FILE_PATH=$PIPOL_WDIR/MPTK_Build
		    ## 4.9) copying
			cp $PIPOL_WDIR/MPTK_Build/MPTK-binary-* $PIPOL_HOMEDIR/packages/
		}; cd -
	;;

	*windows*)
 
		# 2) Creation of temporary repertory  
		mkdir /cygdrive/c/Temp
		
		# 3) Configuration of the variables for matlab
		export TEMP=/cygdrive/c/Temp
		if expr $PIPOL_IMAGE : ".*amd64.*"; then 
			SYSTEMOS=" Win64"
			SYSTEMCOMPILE="x64"
			export PROCESSOR_ARCHITECTURE=AMD64		
			printf 'y\n1\ny\n' | /cygdrive/y/amd64/matlab-2010a-windows/bin/mex.bat -setup
		else 
			SYSTEMCONF=""
			SYSTEMCOMPILE="win32"
			export PROCESSOR_ARCHITECTURE=x86
			printf 'y\n2\ny\n' | /cygdrive/y/i386/matlab-2010a-windows/bin/mex.bat -setup
		fi
		
		# 4) Detectioon of cmake version 
		if [ -e "/cygdrive/c/CMake 2.8/bin/cmake.exe" ]; then
			VERSION="2.8"
		else
			VERSION="2.6"
		fi

		# 5) Cleaning the projet
		rm -Rf ./MPTK_Build
		mkdir MPTK_Build 
		cd MPTK_Build
		
		# 6) Making VISUAL project with cmake 2.6 - 2.8
		/cygdrive/c/CMake\ $VERSION/bin/cmake.exe -DDASH_TESTING=ON -G "$PIPOL_WIN_COMPILER$SYSTEMOS" ./../MPTK_Source

		# 7) Setting environment
		if expr $PIPOL_IMAGE : ".*amd64.*"; then 
	    	"$MSVC_PATH/VC/vcvarsall.bat" amd64
		else 
	    	"$MSVC_PATH/Common7/Tools/vsvars32.bat"
		fi

		# 9) Cleaning the project
		"$VCBUILD" MPTK.sln /Clean "Release|$SYSTEMCOMPILE"

		# 10) Project build
		"$VCBUILD" MPTK.sln /Build "Release|$SYSTEMCOMPILE"
		
		# 11) Project build
		"$VCBUILD" INSTALL.vcproj "Release"
		
		# 12) CDASH submision
		/cygdrive/c/CMake\ $VERSION/bin/ctest.exe -D "Nightly" 

		# 13) To make a Windows Package Installer
		/cygdrive/c/CMake\ $VERSION/bin/cpack.exe -DCPACK_OUTPUT_FILE_PATH=$PIPOL_WDIR/MPTK_Build -G "NSIS" 
		
        # 14) Save the package
		cp $PIPOL_WDIR/MPTK_Build/MPTK-binary-* $PIPOL_HOMEDIR/packages/
	;;
	*)
	;;
esac


