function dictcreate_gui(op)
% 
%  Build a dictionary for MPTK using graphical tools
%  usage : dict = dictcreate_gui();
%

% Possible actions
% Case 0  : initialize
% Case 100: close
% Case 90 : clear dictionary
% TODO Case 85 : save dictionary to workspace
% Case 80 : save dictionary to file
% Case 50 : add a block to dictionary
% Case 10 : select a block type and update display
% Case 20 : toggle the use of default parameters
% Case 25 : choose a wavetable file name
% Case 30 : display help information on selected block parameter

persistent figDict dict currentPath dictPathName waveTablePathName spacing mptkinfo blockinfo blockFramePos blockTitlePos ...
    blockListPos blockInfoPos blockNameStr paramFillFramePos ...
    paramFillTitlePos paramFramePos paramTitlePos paramListPos  ...
    paramInfoPos buttonPos...
    H_CHOICE H_PANEL ...
    H_PARAM H_SET;


% Checking input args

%% No arg -> initialization
%%%%%
if nargin==0,
    op=0; % Create interface
    dict.block = {};
end

%% Common params for button sizes and colors
txtWidth=0.2;
txtHeight=0.07;
btnWidth  = 0.125;
btnHeight = 0.05;
bgcolor = [.2 .3 .4];
fgcolor = [.5 .6 .8];
txtcolor = [1 1 1];


switch(op)
    case 0 %%%%%% CREATE INTERFACE
        %% Load the mptk information
        mptkinfo = mptk4matlab_getinfo_exp;
        currentPath  = pwd;
        if ~isempty(dir(mptkinfo.path.reference))
            dictPathName = [mptkinfo.path.reference '/dictionary'];
            waveTablePathName = [mptkinfo.path.reference '/wavetable'];
        else
            dictPathName = '.';
            waveTablePathName = '.';
        end
        %% Create the main figure
        figDict=figure( ...
            'Name','MPTK - Dictionary creation interface', ...
            'NumberTitle','off', ...
            'MenuBar','none',...
            'Backingstore','off', ...
            'Units','normalized', ...
            'Position',[ .1 .2 .75 .7 ], ...
            'Color',bgcolor, ...
            'Visible','on');

        %% LEFT frame: block selection and information
        blockFramePos = [0.025 0.19 0.175 .775];
        uicontrol( ...
            'Style','frame', ...
            'Units','normalized', ...
            'Position',blockFramePos, ...
            'BackgroundColor',fgcolor);
        % Left frame title
        txtstr = '1) Choose a block type';
        blockTitlePos = [0.03 0.906 0.16 0.055 ];
        uicontrol(...
            'Style','text', ...
            'FontName','Verdana','FontUnits','normalized','FontSize',.29,'FontWeight','bold',...
            'Units','normalized', ...
            'Position',blockTitlePos, ...
            'String',txtstr, ...
            'HorizontalAlignment','center',...
            'BackgroundColor',fgcolor, ...
            'ForegroundColor',txtcolor);

        % List to select blocks from
        blockinfo = mptkinfo.blocks;
        for i=1:length(blockinfo)
            blockNameStr{i} = blockinfo(i).type;
        end
        blockListHeight = length(blockinfo)*0.017;
        blockListPos = [.03 0.9-blockListHeight 0.16 blockListHeight ];
        H_CHOICE(1) = uicontrol( ...
            'Style','listbox', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',blockListPos, ...
            'String',blockNameStr, ...
            'Value',1,...
            'Callback','dictcreate_gui(10)'); % select the block
        
        % Block info panel
        blockInfoHeight = 0.1;
        blockInfoPos = [blockFramePos(1)+0.01 blockListPos(2)-blockInfoHeight-0.05 blockFramePos(3)-0.02 blockInfoHeight];
        H_PANEL(1) = uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',blockInfoPos, ...
            'String','',...
            'HorizontalAlignment','left',...
            'Visible','off');
        
        

        %% BOTTOM part : control buttons
        % The QUIT button, always visible
        btnPos = [blockFramePos(1)+0.01 blockFramePos(2)-0.1 blockFramePos(3)-0.1 0.03];
        H_SET(1) = uicontrol( ...
            'Style','pushbutton', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',btnPos, ...
            'String','Quit',...
            'Callback','dictcreate_gui(100)'); % quit

        % The CLEAR button
        btnPos = [blockFramePos(1)+0.1 blockFramePos(2)-0.1 blockFramePos(3)-0.1 0.03];
        H_SET(2) = uicontrol( ...
            'Style','pushbutton', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',btnPos, ...
            'String','Clear dictionary',...
            'Visible','off',...
            'Callback','dictcreate_gui(90)'); % clear

        % The SAVE button
         btnPos = [blockFramePos(1)+0.2 blockFramePos(2)-0.1 blockFramePos(3)-0.1 0.03];
         H_SET(3) = uicontrol( ...
             'Style','pushbutton', ...
             'Units','normalized', ...
             'BackgroundColor',fgcolor,...
             'Position',btnPos, ...
             'String','Save dictionary',...
             'Visible','off',...
             'Callback','dictcreate_gui(80)'); % save
         
        % The SAVE TO WORKSPACE button
%         btnPos = [blockFramePos(1)+0.3 blockFramePos(2)-0.1 blockFramePos(3) 0.03];
%         H_SET(4) = uicontrol( ...
%             'Style','pushbutton', ...
%             'Units','normalized', ...
%             'BackgroundColor',fgcolor,...
%             'Position',btnPos, ...
%             'String','Save dictionary to variable dictcreateresult',...
%             'Visible','off',...
%             'Callback','dictcreate_gui(85)'); % save to workspace
         
         % The INFO panel
         panelPos = [blockFramePos(1)+0.6 blockFramePos(2)-0.1 0.3 0.05];
         H_PANEL(2) = uicontrol( ...
             'Style','text', ...
             'Units','normalized', ...
             'BackgroundColor',fgcolor,...
             'Position',panelPos, ...
             'String','Dictionary is empty',...
             'Visible','on');
         
         %% MIDDLE frame :
         paramFillFramePos = blockFramePos + [0.2 0 0.35 0];
         uicontrol( ...
             'Style','frame', ...
             'Units','normalized', ...
             'Position',paramFillFramePos, ...
             'BackgroundColor',fgcolor);
         % Set the title
         txtstr = '2) Fill the block parameters';
         paramFillTitlePos = blockTitlePos + [0.2 0 0 0];
         uicontrol(...
             'Style','text', ...
             'FontName','Verdana','FontUnits','normalized','FontSize',.29,'FontWeight','bold',...
             'Units','normalized', ...
             'Position',paramFillTitlePos, ...
             'String',txtstr, ...
             'HorizontalAlignment','center',...
             'BackgroundColor',fgcolor, ...
             'ForegroundColor',txtcolor);
         
         H_CHOICE(3) = uicontrol( ...
            'Style','checkbox', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',paramFillTitlePos, ...
            'String','Push to toggle all boxes',...
            'Visible','off',...
            'Callback','dictcreate_gui(20)'); % toggle all checkboxes
         
         %% RIGHT frame
         paramFramePos = blockFramePos + [0.77 0 0 0];
         uicontrol( ...
             'Style','frame', ...
             'Units','normalized', ...
             'Position',paramFramePos, ...
             'BackgroundColor',fgcolor);

         txtstr = 'Get help on block parameters';
         paramTitlePos = blockTitlePos + [0.77 0 0 0 ];
         uicontrol(...
             'Style','text', ...
             'FontName','Verdana','FontUnits','normalized','FontSize',.29,'FontWeight','bold',...
             'Units','normalized', ...
             'Position',paramTitlePos, ...
             'String',txtstr, ...
             'HorizontalAlignment','center',...
             'BackgroundColor',fgcolor, ...
             'ForegroundColor',txtcolor);

         paramListHeight = 0.1;
         paramListPos = paramTitlePos + [0 -paramListHeight 0 paramListHeight-paramTitlePos(4)];
         H_CHOICE(2) = uicontrol( ...
             'Style','listbox', ...
             'Units','normalized', ...
             'BackgroundColor',fgcolor,...
             'Position',paramListPos, ...
             'String','', ...
             'Value',1,...
             'Visible','off',...
             'Callback','dictcreate_gui(30)'); % display parameter help

         
    case 100 %%%%% QUIT
        clear H_PANEL H_CHOICE H_SET H_PARAM
        close(figDict);
        return;
    case 90 %%%%% CLEAR DICTIONARY
        dict.block = {};
        set(H_PANEL(2),'Visible','off');
        set(H_PANEL(2),'String','Dictionary is empty');
        set(H_PANEL(2),'Visible','on');
        set(H_SET(2),'Visible','off');
        set(H_SET(3),'Visible','off');
%        set(H_SET(4),'Visible','off');

%    case 85 %%%%% SAVE DICTIONARY TO WORKSPACE
%        global dictcreateresult;
%	dictcreateresult = dict;
%	disp('totototot');
    case 80 %%%%% SAVE DICTIONARY TO FILE
        % go to last dictionary path
        cd(dictPathName);
        % choose a file
        [fname, pname, filterind] = uiputfile({'*.xml'},'Save the dictionary in XML format');
        % go back to original path
        cd(currentPath);
        if (~isempty(fname) && length(fname)>0)
            isvalid = dictwrite(dict,fullfile(pname,fname));
        end
        % memorize path
        dictPathName = pname;

    case 50 %%%%% ADD A BLOCK TO THE DICTIONARY

        blockNum = get(H_CHOICE(1),'Value');
        label = get(H_CHOICE(1),'String');
        blockName = label{blockNum};
  
        numParams = length(blockinfo(blockNum).parameters);  
        warningMsg = '';
        % Find which parameters have been set
        for i=1:numParams
            name      = get(H_PARAM(i).name,'String');
            value      = get(H_PARAM(i).value,'String');
            usedefault = get(H_PARAM(i).default,'value');
            if(usedefault && length(value)>0)
                warningMsg = ['Please choose between using the default value and setting a specific value for parameter "' name '".'];
                break;
            elseif((~usedefault) && (length(value)==0))
                continue;
            else
               if usedefault
                  value = blockinfo(blockNum).parameters(i).default;
               end
                
               newblock.(name) = value;
            end
        end
        % If everything is OK, validate the block and add it if OK
        if length(warningMsg)==0
            if validateblock(newblock)
                dict.block{end+1} = newblock;
            else
                warningMsg = [warningMsg 'The block seems ill formed.'];
            end
        end
        
        % Display the new warning msge ...
        if length(warningMsg)>0
             set(H_PANEL(2),'String',warningMsg);
             set(H_PANEL(2),'Visible','on');
        % or update the information on the dictionary
        else
            set(H_PANEL(2),'Visible','off');
            set(H_PANEL(2),'String',['Dictionary has ' num2str(length(dict.block)) ' blocks']);
            set(H_PANEL(2),'Visible','on');
            set(H_SET(2),'Visible','on');
            set(H_SET(3),'Visible','on');
%            set(H_SET(4),'Visible','on');
        end


    case 10 %%%% SELECT BLOCK TYPE and ...
	   %%%% -display block help in left frame (H_PANEL(1)
	   %%%% -update parameter help list in right frame (H_CHOIX(2))
	   %%%% -update parameter selection in middle frame (H_PARAM) 
        blockNum  = get(H_CHOICE(1),'Value');
        label     = get(H_CHOICE(1),'String');
        blockName = label{blockNum};
        
        % Retrieve information
        for i=1:length(blockinfo(blockNum).parameters)
            paramNameStr{i}    = blockinfo(blockNum).parameters(i).name;
            paramTypeStr{i}    = blockinfo(blockNum).parameters(i).type;
            paramInfoStr{i}    = blockinfo(blockNum).parameters(i).info;
            paramDefaultStr{i} = blockinfo(blockNum).parameters(i).default;
            if strcmp(paramNameStr{i},'type')
               infoTxtStr = paramInfoStr{i}; 
            end
        end

        % Display block information on left frame
        blockInfoHeight = (length(infoTxtStr)/20)*0.02;
        blockInfoPos = [blockFramePos(1)+0.01 blockListPos(2)-blockInfoHeight-0.05 blockFramePos(3)-0.02 blockInfoHeight];

        set(H_PANEL(1),'Visible','off');
        set(H_PANEL(1),'Position',blockInfoPos);
        set(H_PANEL(1),'String',infoTxtStr);
        set(H_PANEL(1),'Visible','on');

        % Update parameter information on right frame
        paramListHeight = length(blockinfo(blockNum).parameters)*0.015+0.02;
        paramListPos = paramTitlePos + [0 -paramListHeight 0 paramListHeight-paramTitlePos(4)];
        
        set(H_CHOICE(2),'Visible','off');
        set(H_CHOICE(2),'Position',paramListPos);
        set(H_CHOICE(2),'String',paramNameStr);
        set(H_CHOICE(2),'Visible','on');

        % Update information in middle frame
        % Turn off display of previous filling information
        if(exist('H_PARAM'))
             for(i=1:length(H_PARAM))
                set(H_PARAM(i).name,'Visible','off');
                set(H_PARAM(i).value,'Visible','off');
                set(H_PARAM(i).default,'Visible','off');
             end
             set(H_CHOICE(3),'Visible','off');
         end
                 
        % Display new filling information
        spacing = paramFillTitlePos(4)*0.75;
        % The parameter name column
        paramFillPos = paramFillTitlePos + [0 -spacing 0 0];
        uicontrol(...
            'Style','text', ...
            'FontName','Verdana','FontUnits','normalized','FontSize',.29,'FontWeight','bold',...
            'Units','normalized', ...
            'Position',paramFillPos, ...
            'String','Parameter', ...
            'HorizontalAlignment','left',...
            'BackgroundColor',fgcolor, ...
            'ForegroundColor',txtcolor);        
        for i=1:length(blockinfo(blockNum).parameters)
             paramFillPos = paramFillPos -[0 spacing 0 0];
             H_PARAM(i).name = uicontrol( ...
             'Style','text', ...
             'Units','normalized', ...
             'BackgroundColor',fgcolor,...
             'Position',paramFillPos, ...
             'String',paramNameStr{i},...
             'HorizontalAlignment','left',...
             'Visible','on');
        end
        
        % The edit box column
        paramFillPos = paramFillTitlePos + [0 -spacing 0 0] +[0.1 0 0 0];
        uicontrol(...
            'Style','text', ...
            'FontName','Verdana','FontUnits','normalized','FontSize',.29,'FontWeight','bold',...
            'Units','normalized', ...
            'Position',paramFillPos, ...
            'String','Value', ...
            'HorizontalAlignment','left',...
            'BackgroundColor',fgcolor, ...
            'ForegroundColor',txtcolor);
        paramFillPos = paramFillPos +[0 spacing/2 0 -0.25*spacing];
        for i=1:length(blockinfo(blockNum).parameters)
             paramFillPos = paramFillPos -[0 spacing 0 0];
             if strcmp(paramNameStr{i},'type')
                 H_PARAM(i).value = uicontrol( ...
                     'Style','text', ...
                     'Units','normalized', ...
                     'BackgroundColor',fgcolor,...
                     'String',paramDefaultStr{i},...
                     'Position',paramFillPos);
             elseif strcmp(paramNameStr{i},'windowtype')
                 for i=1:length(mptkinfo.windows)
                     popupStr{i} = mptkinfo.windows(i).type;
                 end
                 H_PARAM(i).value = uicontrol( ...
                     'Style','popupmenu', ...
                     'Units','normalized', ...
                     'BackgroundColor',fgcolor,...
                     'String',popupStr,...
                     'Value',1,...
                     'Position',paramFillPos);
             elseif strcmp(paramNameStr{i},'tableFileName')
                 H_PARAM(i).value = uicontrol( ...
                     'Style','pushbutton', ...
                     'Units','normalized', ...
                     'BackgroundColor',fgcolor,...
                     'String','Choose a file',...
                     'Value',1,...
                     'Position',paramFillPos,...
                     'Callback','dictcreate_gui(25)'); % choose wavetable file name
             else
                 H_PARAM(i).value = uicontrol( ...
                     'Style','edit', ...
                     'Units','normalized', ...
                     'BackgroundColor',fgcolor,...
                     'Position',paramFillPos);
             end
        end
        % The use default column
        paramFillPos = paramFillTitlePos + [0 -spacing 0 0] + [0.3 0 0 0];
        uicontrol(...
            'Style','text', ...
            'FontName','Verdana','FontUnits','normalized','FontSize',.29,'FontWeight','bold',...
            'Units','normalized', ...
            'Position',paramFillPos, ...
            'String','Tick each box to use default value', ...
            'HorizontalAlignment','left',...
            'BackgroundColor',fgcolor, ...
            'ForegroundColor',txtcolor);
        paramFillPos = paramFillPos + [0 spacing/2 0 0];
        for i=1:length(blockinfo(blockNum).parameters)
             paramFillPos = paramFillPos -[0 spacing 0 0];  
             if strcmp(paramNameStr{i},'type')
                 H_PARAM(i).default = uicontrol( ...
                     'Style','text', ...
                     'Units','normalized', ...
                     'BackgroundColor',fgcolor,...
                     'Position',paramFillPos, ...
                     'String',paramDefaultStr{i});
             else
                 H_PARAM(i).default = uicontrol( ...
                     'Style','checkbox', ...
                     'Units','normalized', ...
                     'BackgroundColor',fgcolor,...
                     'Position',paramFillPos, ...
                     'String',paramDefaultStr{i},...
                     'Value',1);
             end
        end
        paramFillPos = paramFillPos -[0 spacing 0 0];
	set(H_CHOICE(3),'Visible','off');
	set(H_CHOICE(3),'Position',paramFillPos);
	set(H_CHOICE(3),'Visible','on');


        % Button used to validate proposition
        buttonPos = [paramFillFramePos(1)+0.1*paramFillFramePos(3) paramFillFramePos(2)+0.05 paramFillFramePos(3)-0.2 0.05];
        H_SET(5) = uicontrol( ...
            'Style','pushbutton', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',buttonPos, ...
            'String','Validate block and add to dictionary',...
            'Callback','dictcreate_gui(50)'); % add block


    case 20 %%%% TOGGLE DEFAULT CHECKBOXES Toggle the default checkboxes
        blockNum = get(H_CHOICE(1),'Value');
        for i=1:length(blockinfo(blockNum).parameters)
            if ~strcmp(blockinfo(blockNum).parameters(i).name,'type')
                set(H_PARAM(i).default,'Value',1-get(H_PARAM(i).default,'Value'));
            end
        end
        
    case 25 %%%% CHOOSE WAVETABLE FILE
        blockNum = get(H_CHOICE(1),'Value');
        % Go to last path for wavetable
        cd(waveTablePathName);
        [filename, pathname, filterind] = uiputfile({'*.xml'},'Choose the wavetable in XML format');
        % Back to pwd
        cd(currentPath);
        % memorize path
        waveTablePathName = pathname;
        if isequal(filename,0) || isequal(pathname,0)
            tmp = 'Choose a file';
        else
            tmp = fullfile(pathname,filename)
            for i=1:length(blockinfo(blockNum).parameters)
                if strcmp(blockinfo(blockNum).parameters(i).name,'tableFileName')
                    set(H_PARAM(i).value,'String',tmp);
                end
            end
        end

    case 30 %%% DISPLAY PARAMETER HELP ON RIGHT PANEL
        
        blockNum = get(H_CHOICE(1),'Value');
        label = get(H_CHOICE(1),'String');
        blockName = label{blockNum};
        paramNum = get(H_CHOICE(2),'Value');
        label = get(H_CHOICE(2),'String');
        paramName = label{paramNum};
        paramType    = blockinfo(blockNum).parameters(paramNum).type;
        paramInfo    = blockinfo(blockNum).parameters(paramNum).info;
        paramDefault = blockinfo(blockNum).parameters(paramNum).default;
        
        infoTxtStr  = paramInfo;

         % Display parameter information
        paramInfoHeight = (length(infoTxtStr)/20)*0.02;
        paramInfoPos = [paramFramePos(1)+0.01 paramListPos(2)-paramInfoHeight-0.05 paramFramePos(3)-0.02 paramInfoHeight];
        if(exist('H_PANEL'))
           if(length(H_PANEL)>=3)
               set(H_PANEL(3),'Visible','off');
           end
        end
        H_PANEL(3) = uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'BackgroundColor',fgcolor,...
            'Position',paramInfoPos, ...
            'String',infoTxtStr,...
            'HorizontalAlignment','left',...
            'Visible','on');
 
        
    otherwise error(['Unknown option: ' op]);
end


function isvalid = validateblock(block)
mptkinfo = mptk4matlab_getinfo_exp;
filename = [mptkinfo.path.reference '/tmp/tmpdict.xml'];
tmpdict.block{1} = block;
isvalid = dictwrite(tmpdict,filename);




